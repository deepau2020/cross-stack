---
AWSTemplateFormatVersion: 2010-09-09
Parameters:
  SecurityGroupDescription:
    Description: Security Groups Description
    Type: String
  SecurityGroupPort:
    Description: locked to my personal IP
    Type: Number
    MinValue: 20 # out range 19
    MaxValue: 65535
  InstanceType:
    Description: WebServer EC2 instance type (has default, AllowedValues)
    Type: String
    Default: t2.micro
    AllowedValues: #possible values
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
    ConstraintDescription: must be a valid EC2 instance type.
  DBPwd:
    NoEcho: true
    Description: The database admin account password (won't be echoed)
    Type: String
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances. Linked to AWS Parameter
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SecurityGroupIngressCIDR:
    Description: locked to my Personal IP address
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
Resources:
  WebEC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      #we reference the InstanceType parameter
      InstanceType: !Ref InstanceType # link to the instance type param
      KeyName: !Ref KeyName
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      # here we reference an internal CloudFormation resource
      SubnetId: !ImportValue SampleNetworkCrossStack-SubnetID
      # Link EC2 instance to security group (two resources)
      SecurityGroupIds:
        - !Ref SSHSecurityGroup
        - !ImportValue SampleNetworkCrossStack-SecurityGroupID
      Tags:
        - Key: Name
          Value: myInstance
      UserData:
        Fn::Base64: |
          #!/bin/bash
          #updating software package
          yum update -y
          #installing apache web server
          yum install -y httpd
          #enabling httpd service
          systemctl start httpd
          #enabling httpd service at boot time
          systemctl enable httpd
          #display web page
          echo "Automated Apache web server deployment using CloudFormation" > /var/www/html/index.html
  SSHSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Ref SecurityGroupDescription
      SecurityGroupIngress:
        - CidrIp: !Ref SecurityGroupIngressCIDR
          FromPort: !Ref SecurityGroupPort
          ToPort: !Ref SecurityGroupPort
          IpProtocol: tcp
      VpcId: !ImportValue SampleNetworkCrossStack-VPCID
  MyEIP:
   Type: AWS::EC2::EIP
   Properties:
     InstanceId: !Ref  WebEC2Instance
Mappings:
  RegionMap:
    us-west-2:
      "HVM64": "ami-0ca05c6eaa4ac40e0"
    eu-west-1:
      "HVM64": "ami-047bb4163c506cd98"
    ap-southeast-1:
      "HVM64": "ami-08569b978cc4dfa10"
    ap-northeast-1:
      "HVM64": "ami-06cd52961ce9f0d85"
    us-east-1:
      "HVM64": "ami-0ff8a91507f77f867"
Outputs:
  PrivateIp:
    Description: Gives private IP for our EC2 instance
    Value: !GetAtt WebEC2Instance.PrivateIp # SG name
    Export: # Make the output available to re-use
      Name:  PrivateIp # variable need to be GLOBALLY UNIQUE
  PrivateDnsName:
    Description: give our private dns name
    Value: !GetAtt WebEC2Instance.PrivateDnsName # SG name
    Export:
      Name: !Sub '${AWS::Region}-PublicDNSname'